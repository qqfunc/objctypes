[build-system]
requires = ["setuptools==80.9.0", "setuptools_scm==9.2.1"]
build-backend = "setuptools.build_meta"

[project]
name = "objctypes"
description = "Use Objective-C features in Python"
readme = "README.md"
requires-python = ">=3.13"
license = "Unlicense"
license-files = ["LICENSE.md"]
keywords = ["objctypes", "objc", "Objective-C", "ObjectiveC"]
classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: MacOS X :: Cocoa",
  "Intended Audience :: Developers",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: iOS",
  "Programming Language :: Objective C",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: Implementation :: CPython",
  "Typing :: Typed",
]
dynamic = ["version"]

[project.urls]
Source = "https://github.com/qqfunc/objctypes"
Documentation = "https://objctypes.readthedocs.io/"
Issues = "https://github.com/qqfunc/objctypes/issues"

[dependency-groups]
check = [
  "editorconfig-checker==3.4.0",
  "ruff==0.14.1",
  "ty==0.0.1a22",
  "types-setuptools==80.9.0.20250822",
  "typos==1.38.1",
]
tests = ["pytest==8.4.2", "pytest-xdist==3.8.0"]
docs = [
  "furo==2025.9.25",
  "packaging==25.0",
  "sphinx==8.2.3",
  "sphinx-autoapi==3.6.1",
  "sphinx-copybutton==0.5.2",
  "sphinx-lint==1.0.0",
  "sphinx-notfound-page==1.1.0",
]
misc = ["taskipy==1.14.1"]
dev = [
  { include-group = "check" },
  { include-group = "tests" },
  { include-group = "docs" },
  { include-group = "misc" },
  "commitlint==1.3.1",
  "lefthook==1.13.6",
  "sphinx-autobuild==2025.8.25",
]
gh-actions-build = [
  { include-group = "tests" },
  "pytest-github-actions-annotate-failures==0.3.0",
]
gh-actions-check = [
  { include-group = "check" },
  { include-group = "docs" },
  { include-group = "tests" },
  { include-group = "misc" },
]
readthedocs = [{ include-group = "docs" }]

[tool.pytest.ini_options]
addopts = "-n auto"

[tool.ruff]
line-length = 79
format.docstring-code-line-length = 72
lint.select = ["ALL"]
lint.ignore = [
  "COM812", # missing-trailing-comma
  "PYI021", # docstring-in-stub
  "D203",   # one-blank-line-before-class
  "D213",   # multi-line-summary-second-line
  "D418",   # overload-with-docstring
]
lint.per-file-ignores."src/**/*.pyi" = [
  "ANN401" # any-type
]
lint.per-file-ignores."setup.py" = [
  "S603", # subprocess-without-shell-equals-true
]
lint.per-file-ignores."docs/conf.py" = [
  "INP001", # implicit-namespace-package
]
lint.per-file-ignores."tests/**.py" = [
  "S101",    # assert
  "INP001",  # implicit-namespace-package
  "PLR2004", # magic-value-comparison
]
lint.pycodestyle.max-doc-length = 72

[tool.setuptools_scm]

[tool.taskipy.settings]
use_vars = true
cwd = "."

[tool.taskipy.variables]
docs = "./docs"
docs-build = { var = "{docs}/_build", recursive = true }

[tool.taskipy.tasks]
test = { cmd = "pytest", help = "Run unit tests with pytest" }
docs-build = { cmd = "sphinx-build {docs} {docs-build}", help = "Build the documentation with Sphinx" }
docs-autobuild = { cmd = "sphinx-autobuild {docs} {docs-build}", help = "Build the documentation with sphinx-autobuild" }
docs-lint = { cmd = "sphinx-lint -i .venv -i {docs-build}", help = "Lint the documentation with sphinx-lint" }

[tool.ty]
terminal.error-on-warning = true

[tool.typos]
files.extend-exclude = ["uv.lock"]
default.unicode = false

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { file = "setup.py" }, { file = "csrc/**/*" }]
